{
  // ESLint Configuration
  "eslint.enable": true,
  "eslint.validate": [
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact",
    "json",
    "jsonc",
    "yaml",
    "toml",
    "xml",
    "gql",
    "graphql",
    "vue",
    "markdown"
  ],
  "eslint.useFlatConfig": true,
  "eslint.experimental.useFlatConfig": true,
  "eslint.workingDirectories": ["./"],
  "eslint.codeAction.showDocumentation": {
    "enable": true
  },
  "eslint.codeActionsOnSave.mode": "all",
  "eslint.format.enable": true,
  "eslint.lintTask.enable": true,
  "eslint.run": "onType",
  "eslint.debug": false,

  // Auto-fix ESLint errors on save
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": "explicit",
    "source.organizeImports": "never",
    "source.removeUnusedImports": "never"
  },

  // File formatting and saving
  "editor.formatOnSave": true,
  "editor.formatOnPaste": true,
  "editor.formatOnType": false,
  "files.autoSave": "onFocusChange",
  "files.trimTrailingWhitespace": true,
  "files.insertFinalNewline": true,
  "files.trimFinalNewlines": true,

  // Default formatter per file type
  "[javascript]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint",
    "editor.formatOnSave": true
  },
  "[javascriptreact]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint",
    "editor.formatOnSave": true
  },
  "[typescript]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint",
    "editor.formatOnSave": true
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint",
    "editor.formatOnSave": true
  },
  "[json]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint",
    "editor.formatOnSave": true
  },
  "[jsonc]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint",
    "editor.formatOnSave": true
  },
  "[css]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint",
    "editor.formatOnSave": true
  },
  "[markdown]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint",
    "editor.formatOnSave": true
  },

  // TypeScript Configuration
  "typescript.updateImportsOnFileMove.enabled": "always",
  "typescript.suggest.autoImports": true,
  "typescript.suggest.includePackageJsonAutoImports": "auto",
  "typescript.preferences.importModuleSpecifier": "relative",
  "typescript.inlayHints.parameterNames.enabled": "all",
  "typescript.inlayHints.parameterTypes.enabled": true,
  "typescript.inlayHints.variableTypes.enabled": true,
  "typescript.inlayHints.propertyDeclarationTypes.enabled": true,
  "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
  "typescript.inlayHints.enumMemberValues.enabled": true,

  // JavaScript/TypeScript specific settings
  "js/ts.implicitProjectConfig.experimentalDecorators": true,
  "js/ts.implicitProjectConfig.strictNullChecks": true,
  "js/ts.implicitProjectConfig.strictFunctionTypes": true,

  // Editor Visual Enhancements
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.bracketPairs": true,
  "editor.guides.indentation": true,
  "editor.linkedEditing": true,
  "editor.suggest.insertMode": "replace",
  "editor.acceptSuggestionOnCommitCharacter": false,
  "editor.acceptSuggestionOnEnter": "on",
  "editor.tabCompletion": "on",
  "editor.wordBasedSuggestions": "allDocuments",
  "editor.quickSuggestions": {
    "other": true,
    "comments": false,
    "strings": true
  },

  // Error and Warning Display
  "problems.decorations.enabled": true,
  "problems.showCurrentInStatus": true,
  "editor.showUnused": true,
  "editor.showDeprecated": true,

  // File Exclusions and Performance
  "files.exclude": {
    "**/.git": true,
    "**/.svn": true,
    "**/.hg": true,
    "**/CVS": true,
    "**/.DS_Store": true,
    "**/Thumbs.db": true,
    "**/node_modules": true,
    "**/.next": true,
    "**/out": true,
    "**/build": true,
    "**/dist": true,
    "**/coverage": true,
    "**/storybook-static": true,
    "**/test-results": true,
    "**/playwright-report": true
  },
  "search.exclude": {
    "**/node_modules": true,
    "**/bower_components": true,
    "**/*.code-search": true,
    "**/.next": true,
    "**/out": true,
    "**/build": true,
    "**/dist": true,
    "**/coverage": true,
    "**/storybook-static": true,
    "**/test-results": true,
    "**/playwright-report": true,
    "**/.git": true,
    "**/package-lock.json": true,
    "**/pnpm-lock.yaml": true,
    "**/yarn.lock": true
  },
  "files.watcherExclude": {
    "**/.git/objects/**": true,
    "**/.git/subtree-cache/**": true,
    "**/node_modules/**": true,
    "**/.next/**": true,
    "**/out/**": true,
    "**/build/**": true,
    "**/dist/**": true,
    "**/coverage/**": true,
    "**/storybook-static/**": true,
    "**/test-results/**": true,
    "**/playwright-report/**": true
  },

  // Git Integration
  "git.autofetch": true,
  "git.enableSmartCommit": true,
  "git.confirmSync": false,
  "git.ignoreLimitWarning": true,

  // Terminal Configuration
  "terminal.integrated.defaultProfile.osx": "zsh",
  "terminal.integrated.env.osx": {
    "FIG_NEW_SESSION": "1"
  },

  // Extension-specific settings
  "emmet.includeLanguages": {
    "typescript": "html",
    "typescriptreact": "html"
  },
  "emmet.triggerExpansionOnTab": true,

  // Tailwind CSS Support
  "tailwindCSS.includeLanguages": {
    "typescript": "html",
    "typescriptreact": "html"
  },
  "tailwindCSS.experimental.classRegex": [
    ["cva\\(([^)]*)\\)", "[\"'`]([^\"'`]*).*?[\"'`]"],
    ["cx\\(([^)]*)\\)", "(?:'|\"|`)([^']*)(?:'|\"|`)"],
    ["cn\\(([^)]*)\\)", "(?:'|\"|`)([^']*)(?:'|\"|`)"],
    ["clsx\\(([^)]*)\\)", "(?:'|\"|`)([^']*)(?:'|\"|`)"]
  ],

  // Next.js specific settings
  "nextjs.include.workspace": true,

  // Auto-completion and IntelliSense
  "editor.suggest.localityBonus": true,
  "editor.suggest.shareSuggestSelections": true,
  "editor.suggest.snippetsPreventQuickSuggestions": false,
  "editor.parameterHints.enabled": true,
  "editor.parameterHints.cycle": true,

  // AI/Copilot Integration (Cursor specific)
  "cursor.cpp.enableIntelliSense": true,
  "cursor.general.enableAutocompletions": true,
  "cursor.chat.enableChatHistory": true,

  // Performance optimizations
  "typescript.disableAutomaticTypeAcquisition": false,
  "typescript.preferences.includePackageJsonAutoImports": "auto",
  "editor.semanticTokenColorCustomizations": {
    "enabled": true
  },

  // Disable conflicting extensions
  "prettier.enable": false,
  "beautify.ignore": ["**/*.js", "**/*.jsx", "**/*.ts", "**/*.tsx", "**/*.json"],

  // Testing support
  "jest.autoRun": "off",
  "vitest.enable": true,
  "playwright.showTrace": true,

  // Debug configuration
  "debug.inlineValues": "auto",
  "debug.openDebug": "openOnDebugBreak"
}
